#!/bin/bash
source .env

RUN_MODE=run
BUILD_MODE=build
UP_MODE=up

print_usage() {
  echo "Usage: $0 build|run -i| -v|--version=[VERSION] -i|--image=[IMAGE]  -c|--container=[CONTAINER_NAME] "
  echo ""
  echo "build - simply build image without running"
  echo "run   - runs image and attempts to pull it if it cannot be found locally"
  echo "up    - build and run image locally"
  echo "[IMAGE] = Image Name. Default='$IMAGE'"
  echo "[VERSION] = Image version. Default='$VERSION'"
  echo "[CONTAINER_NAME] = Running Container Name. Default='$CONTAINER_NAME'"
}

print_wrong_mode() {
  echo "Mode not correctly specified. Modes are: $BUILD_MODE|$RUN_MODE|$UP_MODE"
  exit 2
}

print_info() {
  echo "----------------------------------------"
  echo "Running in '$MODE' mode"
  echo "VERSION           = ${VERSION}"
  echo "IMAGE             = ${IMAGE}"
  echo "CONTAINER_NAME    = ${CONTAINER_NAME}"
  echo "----------------------------------------"
}

parse_args() {
  for i in "$@"; do
    case $i in
    build)
      MODE="$BUILD_MODE"
      shift
      ;;
    run)
      MODE="$RUN_MODE"
      shift
      ;;
    up)
      MODE="$UP_MODE"
      shift
      ;;
    -i=* | --image=*)
      IMAGE="${i#*=}"
      shift
      ;;
    -v=* | --version=*)
      VERSION="${i#*=}"
      shift
      ;;
    -c=* | --container=*)
      CONTAINER_NAME="${i#*=}"
      shift
      ;;
    *) ;; # unknown option
    esac
  done
}

docker_build() {
  docker build . -t $IMAGE:$VERSION
}

docker_run() {
  if [ ! -f server/datasources.json ]; then
    cat <<- EOF > ./server/datasources.json
      {
        "db": {
          "name": "db",
          "connector": "memory"
        },
        "treetracker": {
          "host": "postgres",
          "port": 5432,
          "url": "",
          "database": "db",
          "password": "changeme",
          "name": "test",
          "user": "admin",
          "connector": "postgresql"
        }
      }
EOF
  fi
  echo "Stopping containers"
  docker stop $CONTAINER_NAME
  docker rm $CONTAINER_NAME
  echo "Starting containers"
  docker run -p3000:3000 -v $PWD/server/datasources.json:/opt/admin-server/server/datasources.json --name $CONTAINER_NAME $IMAGE:$VERSION
}

### MAIN ###

if [ $# -eq 0 ]; then
  print_usage
  exit 2
fi

parse_args $@

if [[ $MODE == "" ]]; then
  print_wrong_mode
fi

print_info

case "$MODE" in
$BUILD_MODE)
  docker_build
  ;;
$RUN_MODE)
  docker_run
  ;;
$UP_MODE)
  docker_build
  docker_run
  ;;
*)
  print_wrong_mode
  ;;
esac

exit 0
